{"mappings":"CAAE,WAED,MAAMA,UAAmBC,MAAMC,KAE9BC,YAAaC,EAAQC,GAEpBC,QACAC,KAAKF,eAA0BG,IAAdH,EAA0BA,EAAY,WAElDD,aAAkBH,MAAMQ,gBAE5BF,KAAKG,SAAWN,EAAOM,SACvBH,KAAKI,SAAWP,GAELA,IAEXG,KAAKG,SAAWT,MAAMW,cAAcC,MAAOT,EAAOM,UAClDH,KAAKI,SAAW,IAAIV,MAAMQ,eAAgB,CACzCK,QAASC,OAAOC,OAAQ,GAAIZ,EAAOU,SACnCJ,SAAUH,KAAKG,SACfO,aAAcb,EAAOa,aACrBC,eAAgBd,EAAOc,kBAKzBX,KAAKY,OAAS,IAAIlB,MAAMmB,eAAgBb,KAAKI,S,CAI9CU,OAAQC,EAAUC,EAAaC,GAIzBjB,KAAKG,SAAUH,KAAKF,aAExBE,KAAKG,SAAUH,KAAKF,WAAYoB,MAAQD,EAAWE,SAIpDnB,KAAKY,OAAOR,SAAWJ,KAAKI,SAEvBJ,KAAKoB,gBAETL,EAASM,gBAAiB,MAC1BrB,KAAKY,OAAOE,OAAQC,KAIpBA,EAASM,gBAAiBL,GAErBhB,KAAKsB,OAAQP,EAASO,MAAOP,EAASQ,eAAgBR,EAASS,eAAgBT,EAASU,kBAC7FzB,KAAKY,OAAOE,OAAQC,G,EAQvBrB,MAAMD,WAAaA,CAEnB,CA9DC","sources":["../js/vendor/Three.js/r145/examples_js/postprocessing/ShaderPass.js"],"sourcesContent":["( function () {\n\n\tclass ShaderPass extends THREE.Pass {\n\n\t\tconstructor( shader, textureID ) {\n\n\t\t\tsuper();\n\t\t\tthis.textureID = textureID !== undefined ? textureID : 'tDiffuse';\n\n\t\t\tif ( shader instanceof THREE.ShaderMaterial ) {\n\n\t\t\t\tthis.uniforms = shader.uniforms;\n\t\t\t\tthis.material = shader;\n\n\t\t\t} else if ( shader ) {\n\n\t\t\t\tthis.uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\t\t\t\tthis.material = new THREE.ShaderMaterial( {\n\t\t\t\t\tdefines: Object.assign( {}, shader.defines ),\n\t\t\t\t\tuniforms: this.uniforms,\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tthis.fsQuad = new THREE.FullScreenQuad( this.material );\n\n\t\t}\n\n\t\trender( renderer, writeBuffer, readBuffer\n\t\t\t/*, deltaTime, maskActive */\n\t\t) {\n\n\t\t\tif ( this.uniforms[ this.textureID ] ) {\n\n\t\t\t\tthis.uniforms[ this.textureID ].value = readBuffer.texture;\n\n\t\t\t}\n\n\t\t\tthis.fsQuad.material = this.material;\n\n\t\t\tif ( this.renderToScreen ) {\n\n\t\t\t\trenderer.setRenderTarget( null );\n\t\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setRenderTarget( writeBuffer ); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n\t\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\t\tthis.fsQuad.render( renderer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTHREE.ShaderPass = ShaderPass;\n\n} )();\n"],"names":["ShaderPass","THREE","Pass","constructor","shader","textureID","super","this","undefined","ShaderMaterial","uniforms","material","UniformsUtils","clone","defines","Object","assign","vertexShader","fragmentShader","fsQuad","FullScreenQuad","render","renderer","writeBuffer","readBuffer","value","texture","renderToScreen","setRenderTarget","clear","autoClearColor","autoClearDepth","autoClearStencil"],"version":3,"file":"index.6d3eb549.js.map"}