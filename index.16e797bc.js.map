{"mappings":"CAAE,WAED,MAAMA,UAAmBC,MAAMC,KAE9BC,YAAaC,EAAOC,EAAQC,EAAkBC,EAAYC,GAEzDC,QACAC,KAAKN,MAAQA,EACbM,KAAKL,OAASA,EACdK,KAAKJ,iBAAmBA,EACxBI,KAAKH,WAAaA,EAClBG,KAAKF,gBAA4BG,IAAfH,EAA2BA,EAAa,EAC1DE,KAAKE,OAAQ,EACbF,KAAKG,YAAa,EAClBH,KAAKI,WAAY,EACjBJ,KAAKK,eAAiB,IAAId,MAAMe,K,CAIjCC,OAAQC,EAAUC,EAAaC,GAI9B,MAAMC,EAAeH,EAASI,UAE9B,IAAIC,EAAeC,EADnBN,EAASI,WAAY,OAGUX,IAA1BD,KAAKJ,mBAETkB,EAAsBd,KAAKN,MAAME,iBACjCI,KAAKN,MAAME,iBAAmBI,KAAKJ,kBAI/BI,KAAKH,aAETW,EAASO,cAAef,KAAKK,gBAC7BQ,EAAgBL,EAASQ,gBACzBR,EAASS,cAAejB,KAAKH,WAAYG,KAAKF,aAI1CE,KAAKG,YAETK,EAASL,aAIVK,EAASU,gBAAiBlB,KAAKmB,eAAiB,KAAOT,GAElDV,KAAKE,OAAQM,EAASN,MAAOM,EAASY,eAAgBZ,EAASa,eAAgBb,EAASc,kBAC7Fd,EAASD,OAAQP,KAAKN,MAAOM,KAAKL,QAE7BK,KAAKH,YAETW,EAASS,cAAejB,KAAKK,eAAgBQ,QAIfZ,IAA1BD,KAAKJ,mBAETI,KAAKN,MAAME,iBAAmBkB,GAI/BN,EAASI,UAAYD,C,EAMvBpB,MAAMD,WAAaA,CAEnB,CAzEC","sources":["../js/vendor/Three.js/r145/examples_js/postprocessing/RenderPass.js"],"sourcesContent":["( function () {\n\n\tclass RenderPass extends THREE.Pass {\n\n\t\tconstructor( scene, camera, overrideMaterial, clearColor, clearAlpha ) {\n\n\t\t\tsuper();\n\t\t\tthis.scene = scene;\n\t\t\tthis.camera = camera;\n\t\t\tthis.overrideMaterial = overrideMaterial;\n\t\t\tthis.clearColor = clearColor;\n\t\t\tthis.clearAlpha = clearAlpha !== undefined ? clearAlpha : 0;\n\t\t\tthis.clear = true;\n\t\t\tthis.clearDepth = false;\n\t\t\tthis.needsSwap = false;\n\t\t\tthis._oldClearColor = new THREE.Color();\n\n\t\t}\n\n\t\trender( renderer, writeBuffer, readBuffer\n\t\t\t/*, deltaTime, maskActive */\n\t\t) {\n\n\t\t\tconst oldAutoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\t\t\tlet oldClearAlpha, oldOverrideMaterial;\n\n\t\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\t\toldOverrideMaterial = this.scene.overrideMaterial;\n\t\t\t\tthis.scene.overrideMaterial = this.overrideMaterial;\n\n\t\t\t}\n\n\t\t\tif ( this.clearColor ) {\n\n\t\t\t\trenderer.getClearColor( this._oldClearColor );\n\t\t\t\toldClearAlpha = renderer.getClearAlpha();\n\t\t\t\trenderer.setClearColor( this.clearColor, this.clearAlpha );\n\n\t\t\t}\n\n\t\t\tif ( this.clearDepth ) {\n\n\t\t\t\trenderer.clearDepth();\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( this.renderToScreen ? null : readBuffer ); // TODO: Avoid using autoClear properties, see https://github.com/mrdoob/three.js/pull/15571#issuecomment-465669600\n\n\t\t\tif ( this.clear ) renderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\t\t\trenderer.render( this.scene, this.camera );\n\n\t\t\tif ( this.clearColor ) {\n\n\t\t\t\trenderer.setClearColor( this._oldClearColor, oldClearAlpha );\n\n\t\t\t}\n\n\t\t\tif ( this.overrideMaterial !== undefined ) {\n\n\t\t\t\tthis.scene.overrideMaterial = oldOverrideMaterial;\n\n\t\t\t}\n\n\t\t\trenderer.autoClear = oldAutoClear;\n\n\t\t}\n\n\t}\n\n\tTHREE.RenderPass = RenderPass;\n\n} )();\n"],"names":["RenderPass","THREE","Pass","constructor","scene","camera","overrideMaterial","clearColor","clearAlpha","super","this","undefined","clear","clearDepth","needsSwap","_oldClearColor","Color","render","renderer","writeBuffer","readBuffer","oldAutoClear","autoClear","oldClearAlpha","oldOverrideMaterial","getClearColor","getClearAlpha","setClearColor","setRenderTarget","renderToScreen","autoClearColor","autoClearDepth","autoClearStencil"],"version":3,"file":"index.16e797bc.js.map"}