{"mappings":"AAiBA,IAAIA,OAASA,QAAU,GAQvBA,OAAOC,aAAe,SAASC,EAAUC,GACxC,IAAIC,EAAW,WAEdF,EAASG,QAASC,OAAOC,WAAYD,OAAOE,aAE5CL,EAAOM,OAASH,OAAOC,WAAaD,OAAOE,YAC3CL,EAAOO,wB,EAKR,OAFAJ,OAAOK,iBAAiB,SAAUP,GAAU,GAErC,CACNQ,QAAU,WACTR,G,EAKDS,QAAU,WACTP,OAAOQ,oBAAoB,SAAUV,E","sources":["../js/vendor/Three.js/THREEx/threex.windowresize.js"],"sourcesContent":["// This THREEx helper makes it easy to handle window resize.\n// It will update renderer and camera when window is resized.\n//\n// # Usage\n//\n// **Step 1**: Start updating renderer and camera\n//\n// ```var windowResize = new THREEx.WindowResize(aRenderer, aCamera)```\n//    \n// **Step 2**: stop updating renderer and camera\n//\n// ```windowResize.destroy()```\n// # Code\n\n//\n\n/** @namespace */\nvar THREEx\t= THREEx || {}\n\n/**\n * Update renderer and camera when the window is resized\n * \n * @param {Object} renderer the renderer to update\n * @param {Object} Camera the camera to update\n*/\nTHREEx.WindowResize\t= function(renderer, camera){\n\tvar callback\t= function(){\n\t\t// notify the renderer of the size change\n\t\trenderer.setSize( window.innerWidth, window.innerHeight )\n\t\t// update the camera\n\t\tcamera.aspect\t= window.innerWidth / window.innerHeight\n\t\tcamera.updateProjectionMatrix()\n\t}\n\t// bind the resize event\n\twindow.addEventListener('resize', callback, false)\n\t// return .stop() the function to stop watching window resize\n\treturn {\n\t\ttrigger\t: function(){\n\t\t\tcallback()\n\t\t},\n\t\t/**\n\t\t * Stop watching window resize\n\t\t*/\n\t\tdestroy\t: function(){\n\t\t\twindow.removeEventListener('resize', callback)\n\t\t}\n\t}\n}\n"],"names":["THREEx","WindowResize","renderer","camera","callback","setSize","window","innerWidth","innerHeight","aspect","updateProjectionMatrix","addEventListener","trigger","destroy","removeEventListener"],"version":3,"file":"index.440adf5b.js.map"}