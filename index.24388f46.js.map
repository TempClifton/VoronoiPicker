{"mappings":"CAAE,WAED,MAAMA,UAAiBC,MAAMC,KAE5BC,YAAaC,EAAOC,GAEnBC,QACAC,KAAKH,MAAQA,EACbG,KAAKF,OAASA,EACdE,KAAKC,OAAQ,EACbD,KAAKE,WAAY,EACjBF,KAAKG,SAAU,C,CAIhBC,OAAQC,EAAUC,EAAaC,GAI9B,MAAMC,EAAUH,EAASI,aACnBC,EAAQL,EAASK,MAQvB,IAAIC,EAAYC,EANhBF,EAAMG,QAAQC,MAAMC,SAAS,GAC7BL,EAAMG,QAAQG,MAAMD,SAAS,GAE7BL,EAAMG,QAAQC,MAAMG,WAAW,GAC/BP,EAAMG,QAAQG,MAAMC,WAAW,GAI1BjB,KAAKG,SAETQ,EAAa,EACbC,EAAa,IAIbD,EAAa,EACbC,EAAa,GAIdF,EAAMG,QAAQK,QAAQC,SAAS,GAC/BT,EAAMG,QAAQK,QAAQE,MAAOZ,EAAQa,QAASb,EAAQa,QAASb,EAAQa,SACvEX,EAAMG,QAAQK,QAAQI,QAASd,EAAQe,OAAQZ,EAAY,YAC3DD,EAAMG,QAAQK,QAAQM,SAAUZ,GAChCF,EAAMG,QAAQK,QAAQD,WAAW,GAEjCZ,EAASoB,gBAAiBlB,GACrBP,KAAKC,OAAQI,EAASJ,QAC3BI,EAASD,OAAQJ,KAAKH,MAAOG,KAAKF,QAClCO,EAASoB,gBAAiBnB,GACrBN,KAAKC,OAAQI,EAASJ,QAC3BI,EAASD,OAAQJ,KAAKH,MAAOG,KAAKF,QAElCY,EAAMG,QAAQC,MAAMG,WAAW,GAC/BP,EAAMG,QAAQG,MAAMC,WAAW,GAE/BP,EAAMG,QAAQK,QAAQD,WAAW,GACjCP,EAAMG,QAAQK,QAAQI,QAASd,EAAQkB,MAAO,EAAG,YAEjDhB,EAAMG,QAAQK,QAAQE,MAAOZ,EAAQmB,KAAMnB,EAAQmB,KAAMnB,EAAQmB,MACjEjB,EAAMG,QAAQK,QAAQD,WAAW,E,EAMnC,MAAMW,UAAsBlC,MAAMC,KAEjCC,cAECG,QACAC,KAAKE,WAAY,C,CAIlBE,OAAQC,GAIPA,EAASK,MAAMG,QAAQK,QAAQD,WAAW,GAC1CZ,EAASK,MAAMG,QAAQK,QAAQC,SAAS,E,EAM1CzB,MAAMkC,cAAgBA,EACtBlC,MAAMD,SAAWA,CAEjB,CA3FC","sources":["../js/vendor/Three.js/r145/examples_js/postprocessing/MaskPass.js"],"sourcesContent":["( function () {\n\n\tclass MaskPass extends THREE.Pass {\n\n\t\tconstructor( scene, camera ) {\n\n\t\t\tsuper();\n\t\t\tthis.scene = scene;\n\t\t\tthis.camera = camera;\n\t\t\tthis.clear = true;\n\t\t\tthis.needsSwap = false;\n\t\t\tthis.inverse = false;\n\n\t\t}\n\n\t\trender( renderer, writeBuffer, readBuffer\n\t\t\t/*, deltaTime, maskActive */\n\t\t) {\n\n\t\t\tconst context = renderer.getContext();\n\t\t\tconst state = renderer.state; // don't update color or depth\n\n\t\t\tstate.buffers.color.setMask( false );\n\t\t\tstate.buffers.depth.setMask( false ); // lock buffers\n\n\t\t\tstate.buffers.color.setLocked( true );\n\t\t\tstate.buffers.depth.setLocked( true ); // set up stencil\n\n\t\t\tlet writeValue, clearValue;\n\n\t\t\tif ( this.inverse ) {\n\n\t\t\t\twriteValue = 0;\n\t\t\t\tclearValue = 1;\n\n\t\t\t} else {\n\n\t\t\t\twriteValue = 1;\n\t\t\t\tclearValue = 0;\n\n\t\t\t}\n\n\t\t\tstate.buffers.stencil.setTest( true );\n\t\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\t\tstate.buffers.stencil.setClear( clearValue );\n\t\t\tstate.buffers.stencil.setLocked( true ); // draw into the stencil buffer\n\n\t\t\trenderer.setRenderTarget( readBuffer );\n\t\t\tif ( this.clear ) renderer.clear();\n\t\t\trenderer.render( this.scene, this.camera );\n\t\t\trenderer.setRenderTarget( writeBuffer );\n\t\t\tif ( this.clear ) renderer.clear();\n\t\t\trenderer.render( this.scene, this.camera ); // unlock color and depth buffer for subsequent rendering\n\n\t\t\tstate.buffers.color.setLocked( false );\n\t\t\tstate.buffers.depth.setLocked( false ); // only render where stencil is set to 1\n\n\t\t\tstate.buffers.stencil.setLocked( false );\n\t\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\n\t\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t}\n\n\t}\n\n\tclass ClearMaskPass extends THREE.Pass {\n\n\t\tconstructor() {\n\n\t\t\tsuper();\n\t\t\tthis.needsSwap = false;\n\n\t\t}\n\n\t\trender( renderer\n\t\t\t/*, writeBuffer, readBuffer, deltaTime, maskActive */\n\t\t) {\n\n\t\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t\t}\n\n\t}\n\n\tTHREE.ClearMaskPass = ClearMaskPass;\n\tTHREE.MaskPass = MaskPass;\n\n} )();\n"],"names":["MaskPass","THREE","Pass","constructor","scene","camera","super","this","clear","needsSwap","inverse","render","renderer","writeBuffer","readBuffer","context","getContext","state","writeValue","clearValue","buffers","color","setMask","depth","setLocked","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass"],"version":3,"file":"index.24388f46.js.map"}