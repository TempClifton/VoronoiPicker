{"mappings":"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","sources":["../js/lm_src/lm_three_utils.js"],"sourcesContent":["'use strict';\n\n//////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////\n//////////////////////////////////////////////////////////////////////////////\n\nclass lm_ThreeApp\n{\n\tconstructor()\n\t{\n\t\t// These are almost like constants\n\t\tthis.BACKGROUND_COLOR = 0xff0000; // bright red to remind me to set it intentionally for the project\n\n\t\tthis.cameraControlMode = \"Orbit\"; // Orbit, Trackball\n\n\t\tthis.SSAO = {\n\t\t\tenabled: false,\n\t\t\tonlyAO: false,\n\t\t\tradius: 12,\n\t\t\tminDistance: 0.005,\n\t\t\tmaxDistance: 0.1,\n\t\t};\n\n\t\tthis.Bokeh = {\n\t\t\tenabled: false,\n\t\t\tfocusDistance: -1, // negative indicates auto-distance calculation\n\t\t};\n\n\t\tthis.FilmGrain = {\n\t\t\tenabled: false,\n\t\t\tnoiseIntensity: 0.3, // 0 - 1\n\t\t\tscanlineIntensity: 0, // 0 - 1\n\t\t\tscanlineCount: 0, // 0 - 4096\n\t\t\tgrayscale: true,\n\t\t};\n\n\t\tthis.outlineOptions = {\n\t\t\tobjects: [],\n\t\t\tedgeStrength: 3,\n\t\t\tedgeGlow: 0,\n\t\t\tedgeThickness: 1,\n\t\t\tvisibleEdgeColor: new THREE.Color( 1, 1, 1 ),\n\t\t\thiddenEdgeColor: new THREE.Color( 0.1, 0.04, 0.02 ),\n\t\t};\n\n\t\tthis.toonEffect = { enabled: false, }; // This doesn't actually work right now...\n\n\t\tthis.rendererOptions = { preserveDrawingBuffer: true, antialias: true, alpha: false };\n\n\t\tthis.continuousRendering = true;\n\n\t\tthis.showStats = true;\n\n\t\tthis.useEffectComposer = false;\n\n\t\tthis.clickTolerance = 3;\n\n\t\tthis.mainTimer = new lm.Stopwatch();\n\t\tthis.mainTimer.Start();\n\t}\n\n\tSetupThreeJS(divID)\n\t{ // divID is optional - if left out, we'll assume there is a div named \"WebGL-output\" and resize to fill the entire window\n\t\tif (lm.DEBUG && this.showStats)\n\t\t{\n\t\t\tthis.stats = new Stats();\n\t\t\tthis.stats.setMode(0); // 0: fps, 1: ms\n\t\t\t// Align top-left\n\t\t\tthis.stats.domElement.style.position = \"absolute\";\n\t\t\tthis.stats.domElement.style.left = \"220px\";\n\t\t\tthis.stats.domElement.style.top = \"0px\";\n\t\t\tdocument.body.appendChild(this.stats.domElement);\n\t\t}\n\n\t\tthis.canvasDiv = null;\n\t\tthis.canvasWidth = window.innerWidth;\n\t\tthis.canvasHeight = window.innerHeight;\n\t\tif (divID)\n\t\t{\n\t\t\tthis.canvasDiv = document.getElementById(divID);\n\t\t\tthis.canvasWidth = this.canvasDiv.clientWidth;\n\t\t\tthis.canvasHeight = this.canvasDiv.clientHeight;\n\t\t}\n\t\telse\n\t\t\tthis.canvasDiv = document.getElementById(\"WebGL-output\");\n\n\t\t// scene and camera\n\t\tthis.scene = new THREE.Scene();\n\n\t\tthis.scene.add(this.lightGroup = new THREE.Group()); // lights get added here\n\t\tthis.scene.add(this.extrasGroup = new THREE.Group()); // things like axes, automatic ground, etc.\n\t\tthis.scene.add(this.userGroup = new THREE.Group()); // things specific to the application\n\n\t\tthis.camera = new THREE.PerspectiveCamera(45, this.canvasWidth / this.canvasHeight, 20, 100);\n\t\tthis.camera.position.set(-30, 40, 30);\n\t\tthis.camera.lookAt(this.scene.position);\n\n\t\tif (this.cameraControlMode == \"Orbit\")\n\t\t{\n\t\t\tthis.camControls = new THREE.OrbitControls(this.camera, this.canvasDiv);\n\t\t\t//this.camControls.autoRotate = true;\n\t\t\t//this.camControls.enableDamping = true;\n\t\t\tthis.camControls.screenSpacePanning = true;\n\t\t\tthis.camControls.rotateSpeed = 1.5;\n\t\t\tthis.camControls.zoomSpeed = 1.0;\n\t\t\tthis.camControls.panSpeed = 1.0;\n\t\t\tthis.camControls.keyPanSpeed = 30.0;\n\t\t}\n\t\telse if (this.cameraControlMode == \"Trackball\")\n\t\t{\n\t\t\tthis.camControls = new THREE.TrackballControls(this.camera, this.canvasDiv);\n\n\t\t\tthis.camControls.rotateSpeed = 1.0;\n\t\t\tthis.camControls.zoomSpeed = 1.2;\n\t\t\tthis.camControls.panSpeed = 0.8;\n\n\t\t\tthis.camControls.noZoom = false;\n\t\t\tthis.camControls.noPan = false;\n\n\t\t\tthis.camControls.staticMoving = true;\n\t\t\tthis.camControls.dynamicDampingFactor = 0.3;\n\n\t\t\tthis.camControls.keys = [ 65, 83, 68 ];\n\n\t\t\t//this.camControls.addEventListener( 'change', render );\n\t\t}\n\t\tif (this.camControls)\n\t\t\tthis.camControls.addEventListener('change', this.QueueRender.bind(this));\n\n\t\t// renderer\n\t\tthis.renderer = new THREE.WebGLRenderer(this.rendererOptions);\n\t\tif (this.rendererOptions.alpha)\n\t\t\tthis.renderer.setClearColor(this.BACKGROUND_COLOR, 0.0);\n\t\telse\n\t\t\tthis.renderer.setClearColor(this.BACKGROUND_COLOR, 1.0);\n\t\tthis.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\t\tthis.renderer.shadowMap.enabled = true;\n\t\tthis.renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n\n\t\t// lights\n\t\t// (Actually, don't set up any default lights.\n\t\t// Instead, provide a helper function that apps can choose to use.)\n\n\t\tif (divID)\n\t\t{\n\t\t\tthis.autoResize = true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tTHREEx.WindowResize(this.renderer, this.camera);\n\t\t}\n\t\tthis.canvasDiv.appendChild(this.renderer.domElement);\n\n\t\tlm.ConnectMouseEvents(this.canvasDiv, this, {\n\t\t\thandleClick: true,\n\t\t\thandleDoubleClick: true,\n\t\t});\n\n\t\tthis.Render();\n\n\t\t// iOS (and possibly other platforms)\n\t\tlet self = this;\n\n\t\t// Disable pinch to zoom.\n\t\tdocument.addEventListener('touchmove', function (event)\n\t\t{\n\t\t\tif (event.scale !== 1)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}, { passive: false});\n\n\t\t// Disable double-tap auto-zoom.\n\t\tlet lastTouchEnd = 0;\n\t\tdocument.addEventListener('touchend', function (event)\n\t\t{\n\t\t\tvar now = (new Date()).getTime();\n\t\t\tif (now - lastTouchEnd <= 300)\n\t\t\t{\n\t\t\t\tevent.preventDefault();\n\t\t\t\t// var mousePt = lm.PageToElemCoords(self.canvasDiv, event.pageX, event.pageY);\n\t\t\t\t// self.mouseX = mousePt.x;\n\t\t\t\t// self.mouseY = mousePt.y;\n\t\t\t\t// self.OnDoubleTap(self.mouseX, self.mouseY, event);\n\t\t\t}\n\t\t\tlastTouchEnd = now;\n\t\t}, false);\n\t}\n\n\tUpdateScene(isRendering) // virtual - subclasses should implement this\n\t{\n\t}\n\n\tQueueRender()\n\t{\n\t\tthis.queueRender = true;\n\t}\n\n\t_AnimationCallback()\n\t{\n\t\tthis.Render();\n\t}\n\n\tRender(forceNow)\n\t{\n\t\tif (forceNow)\n\t\t\tthis.queueRender = true;\n\n\t\tif (!this.continuousRendering && !this.queueRender)\n\t\t{\n\t\t\tif (this.autoResize)\n\t\t\t{\n\t\t\t\tif (this.canvasWidth != this.canvasDiv.clientWidth ||\n\t\t\t\t\tthis.canvasHeight != this.canvasDiv.clientHeight)\n\t\t\t\t{\n\t\t\t\t\tthis.canvasWidth = this.canvasDiv.clientWidth;\n\t\t\t\t\tthis.canvasHeight = this.canvasDiv.clientHeight;\n\t\t\t\t\t// notify the renderer of the size change\n\t\t\t\t\tthis.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\t\t\t\t\t// update the camera\n\t\t\t\t\tif (this.camera.isOrthographicCamera)\n\t\t\t\t\t{\n\t\t\t\t\t\tlet f = this.camera.top * this.canvasWidth / this.canvasHeight;\n\t\t\t\t\t\tthis.camera.left = -f;\n\t\t\t\t\t\tthis.camera.right = f;\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.camera.aspect = this.canvasWidth / this.canvasHeight;\n\t\t\t\t\tthis.camera.updateProjectionMatrix();\n\t\t\t\t\tthis.QueueRender();\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.UpdateScene(false); // We may want to do some continuous computation, even if we're not rendering.\n\t\t\trequestAnimationFrame(this._AnimationCallback.bind(this));\n\t\t\treturn;\n\t\t}\n\t\tthis.queueRender = false;\n\n\t\tif (lm.DEBUG && this.stats)\n\t\t\tthis.stats.begin();\n\t\tif (this.camControls)\n\t\t\tthis.camControls.update();\n\n\t\tif (this.autoResize)\n\t\t{\n\t\t\tif (this.canvasWidth != this.canvasDiv.clientWidth ||\n\t\t\t\tthis.canvasHeight != this.canvasDiv.clientHeight)\n\t\t\t{\n\t\t\t\tthis.canvasWidth = this.canvasDiv.clientWidth;\n\t\t\t\tthis.canvasHeight = this.canvasDiv.clientHeight;\n\t\t\t\t// notify the renderer of the size change\n\t\t\t\tthis.renderer.setSize(this.canvasWidth, this.canvasHeight);\n\t\t\t\t// update the camera\n\t\t\t\tif (this.camera.isOrthographicCamera)\n\t\t\t\t{\n\t\t\t\t\tlet f = this.camera.top * this.canvasWidth / this.canvasHeight;\n\t\t\t\t\tthis.camera.left = -f;\n\t\t\t\t\tthis.camera.right = f;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tthis.camera.aspect = this.canvasWidth / this.canvasHeight;\n\t\t\t\tthis.camera.updateProjectionMatrix();\n\t\t\t}\n\t\t}\n\n\t\t// set up post-processing on-demand\n\t\tthis.useEffectComposer = false;\n\t\tif (this.toonEffect.enabled)\n\t\t{\n\t\t\tif (!this.toonEffectObject)\n\t\t\t{\n\t\t\t\tthis.toonEffectObject = new THREE.OutlineEffect(this.renderer,\n\t\t\t\t\t{\n\t\t\t\t\t\tdefaultThickness: 1,\n\t\t\t\t\t\tdefaultColor: [ 0, 1, 0 ],\n\t\t\t\t\t\tdefaultAlpha: 1.0,\n\t\t\t\t\t\tdefaultKeepAlive: true // keeps outline material in cache even if material is removed from scene\n\t\t\t    \t});\n\t\t\t}\n\t\t}\n\t\telse if (this.SSAO.enabled || this.Bokeh.enabled || this.FilmGrain.enabled || this.outlineOptions.objects.length > 0)\n\t\t{\n\t\t\tthis.useEffectComposer = true;\n\t\t}\n\t\t/*else if (!this.SSAO.enabled && this.effectComposer)\n\t\t{\n\t\t\tthis.effectComposer = null;\n\t\t\tthis.renderPass = null;\n\t\t\tthis.ssaoPass = null;\n\t\t}*/\n\n\t\tif (this.effectComposer && (!this.useEffectComposer || this.renderPass.camera != this.camera))\n\t\t{\n\t\t\tthis.effectComposer = null;\n\t\t\tthis.renderPass = null;\n\t\t\tthis.ssaoPass = null;\n\t\t\tthis.bokehPass = null;\n\t\t\tthis.filmGrainPass = null;\n\t\t\tthis.outlinePass = null;\n\t\t}\n\n\t\tif (this.useEffectComposer && !this.effectComposer)\n\t\t{\n\t\t\t// Get the effect composer ready\n\t\t\tthis.effectComposer = new THREE.EffectComposer(this.renderer);\n\t\t}\n\n\t\tif (this.useEffectComposer && this.effectComposer)\n\t\t{ // Make sure the correct passes are set up for the effect composer\n\t\t\tif (!this.renderPass)\n\t\t\t{\n\t\t\t\t// Setup render pass\n\t\t\t\tthis.renderPass = new THREE.RenderPass(this.scene, this.camera);\n\t\t\t\tthis.renderPass.clearColor = this.BACKGROUND_COLOR;\n\t\t\t\tthis.renderPass.clearAlpha = 1;\n\t\t\t    //this.renderPass.renderToScreen = true;\n\t\t\t    //this.renderPass.clear = true;\n\t\t\t    //this.renderPass.clearDepth = true;\n\t\t\t}\n\n\t\t\tif (this.SSAO.enabled)\n\t\t\t{\n\t\t\t\t// Setup SSAO pass\n\t\t\t\tif (!this.ssaoPass)\n\t\t\t\t\tthis.ssaoPass = new THREE.SSAOPass(this.scene, this.camera);//, 512, 512);\n\t\t\t\tthis.ssaoPass.kernelRadius = this.SSAO.radius;\n\t\t\t\tthis.ssaoPass.minDistance = this.SSAO.minDistance;\n\t\t\t\tthis.ssaoPass.maxDistance = this.SSAO.maxDistance;\n\t\t\t\tif (this.SSAO.onlyAO)\n\t\t\t\t\tthis.ssaoPass.output = THREE.SSAOPass.OUTPUT.SSAO;\n\t\t\t\telse\n\t\t\t\t\tthis.ssaoPass.output = 0;\n\t\t\t\t// this.minDistance = 0.005;\n\t\t\t\t// this.maxDistance = 10.1;\n\t\t\t\t// this.ssaoPass.aoClamp = this.SSAO.aoClamp;\n\t\t\t\t// this.ssaoPass.lumInfluence = this.SSAO.lumInfluence;\n\t\t\t}\n\n\t\t\tif (this.Bokeh.enabled)\n\t\t\t{\n\t\t\t\t// Setup Bokeh pass\n\t\t\t\tlet bokehParams = {\n\t\t\t\t\tfocus: this.Bokeh.focusDistance,\n\t\t\t\t\taperture: 0.0075,\n\t\t\t\t\tmaxblur: 0.02,\n\t\t\t\t};\n\t\t\t\tif (bokehParams.focus < 0)\n\t\t\t\t{\n\t\t\t\t\tlet sceneCenter = new THREE.Vector3();\n\t\t\t\t\tthis.GetSceneBounds().getCenter(sceneCenter);\n\t\t\t\t\tsceneCenter.sub(this.camera.position);\n\t\t\t\t\tbokehParams.focus = sceneCenter.length();\n\t\t\t\t}\n\t\t\t\tif (this.bokehPass && !lm.RealEqual(this.bokehPass.uniforms[\"focus\"].value, bokehParams.focus, 0.001))\n\t\t\t\t\tthis.bokehPass = null;\n\t\t\t\tif (!this.bokehPass)\n\t\t\t\t{\n\t\t\t\t\tthis.bokehPass = new THREE.BokehPass(this.scene, this.camera, bokehParams);\n\t\t\t\t\tif (this.FilmGrain.enabled)\n\t\t\t\t\t\tthis.bokehPass.needsSwap = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t\tthis.bokehPass = null;\n\n\t\t\tif (this.FilmGrain.enabled)\n\t\t\t{\n\t\t\t\t// Setup FilmGrain pass\n\t\t\t\tif (!this.filmGrainPass)\n\t\t\t\t\tthis.filmGrainPass = new THREE.FilmPass(this.FilmGrain.noiseIntensity, this.FilmGrain.scanlineIntensity, this.FilmGrain.scanlineCount, this.FilmGrain.grayscale);\n\t\t\t}\n\n\t\t\tif (this.outlineOptions.objects.length > 0)\n\t\t\t{\n\t\t\t\tif (!this.outlinePass)\n\t\t\t\t\tthis.outlinePass = new THREE.OutlinePass(new THREE.Vector2(this.canvasWidth, this.canvasHeight), this.scene, this.camera);\n\t\t\t\tthis.outlinePass.edgeStrength = this.outlineOptions.edgeStrength;\n\t\t\t\tthis.outlinePass.edgeGlow = this.outlineOptions.edgeGlow;\n\t\t\t\tthis.outlinePass.edgeThickness = this.outlineOptions.edgeThickness;\n\t\t\t\tthis.outlinePass.visibleEdgeColor = this.outlineOptions.visibleEdgeColor;\n\t\t\t\tthis.outlinePass.hiddenEdgeColor = this.outlineOptions.hiddenEdgeColor;\n\t\t\t}\n\n\t\t\tthis.effectComposer.passes = [];\n\t\t\tthis.effectComposer.addPass(this.renderPass);\n\t\t\tif (this.SSAO.enabled)\n\t\t\t\tthis.effectComposer.addPass(this.ssaoPass);\n\t\t\tif (this.Bokeh.enabled)\n\t\t\t\tthis.effectComposer.addPass(this.bokehPass);\n\t\t\tif (this.FilmGrain.enabled)\n\t\t\t\tthis.effectComposer.addPass(this.filmGrainPass);\n\t\t\tif (this.outlineOptions.objects.length > 0)\n\t\t\t\tthis.effectComposer.addPass(this.outlinePass);\n\t\t}\n\n\t\tif (this.outlinePass)\n\t\t\tthis.outlinePass.selectedObjects = this.outlineOptions.objects;\n\n\t\tthis.UpdateScene(true);\n\n\t\tif (this.userGroup.children.length < 1)\n\t\t{\n\t\t\tif (!this.reportedEmptyUserGroup)\n\t\t\t\tthis.reportedEmptyUserGroup = 1;\n\t\t\telse\n\t\t\t\tthis.reportedEmptyUserGroup++;\n\t\t\tif (this.reportedEmptyUserGroup == 2)\n\t\t\t\tlm.Log(\"The user group is empty!\");\n\t\t}\n\n\t\tif (this.toonEffect.enabled)\n\t\t\tthis.toonEffectObject.render(this.scene, this.camera);\n\t\tif (this.useEffectComposer && this.effectComposer)\n\t\t\tthis.effectComposer.render();\n\t\telse\n\t\t\tthis.renderer.render(this.scene, this.camera);\n\n\t\tif (this.overlayScene)\n\t\t{\n\t\t\tthis.renderer.autoClear = false;\n\t\t\tthis.renderer.clearDepth();\n\t\t\tthis.renderer.render(this.overlayScene, this.overlayCamera);\n\t\t\tthis.renderer.autoClear = true;\n\t\t}\n\n\t\tif (lm.DEBUG && this.stats)\n\t\t\tthis.stats.end();\n\t\tif (!forceNow)\n\t\t\trequestAnimationFrame(this._AnimationCallback.bind(this));\n\t}\n\n\t// Utility functions\n\n\tGetSceneBounds()\n\t{\n\t\t//if (this.sceneBoundingBox)\n\t\t//\treturn this.sceneBoundingBox;\n\n\t\tlet bbox = new THREE.Box3().setFromObject(this.userGroup);\n\t\tif (bbox.isEmpty())\n\t\t\tbbox = new THREE.Box3().setFromObject(this.extrasGroup);\n\n\t\treturn bbox;\n\t}\n\n\tClearUserGroup()\n\t{\n\t\twhile (this.userGroup.children.length > 0)\n\t\t\tthis.userGroup.remove(this.userGroup.children[0]);\n\t}\n\n\tAutoSetCamera(bounds, near, far, boundsScale, duration)\n\t{ // bounds is optional - is included, set the camera based on this lm.BBox object\n\t\t// near and far are also optional\n\t\tboundsScale = lm.Default(boundsScale, 1.1);\n\t\tduration = lm.Default(duration, 0);\n\t\tthis.cameraViewDir = lm.Default(this.cameraViewDir, \"free\");\n\n\t\tlet bbox = this.GetSceneBounds();\n\t\tif (bounds)\n\t\t{\n\t\t\tbbox.set(new THREE.Vector3(bounds.min.x, bounds.min.y, bounds.min.z), new THREE.Vector3(bounds.max.x, bounds.max.y, bounds.max.z));\n\t\t}\n\t\tlet c = new THREE.Vector3();\n\t\tbbox.getCenter(c);\n\t\tlet s = new THREE.Vector3();\n\t\tbbox.getSize(s);\n\n\t\tlet radius = lm.Max(s.x, lm.Max(s.y, s.z)) * boundsScale;\n\n\t\tlet v = new THREE.Vector3(0, 0, radius * 2);\n\t\tv.applyEuler(new THREE.Euler(lm.Rad(-20), lm.Rad(30), 0.0, 'YXZ'));\n\t\tv = v.add(c);\n\n\t\tlet oldPosition = this.camera.position.clone();\n\t\tlet oldTarget = this.camControls.target.clone();\n\n\t\tif (this.cameraViewDir == \"free\")\n\t\t{\n\t\t\tthis.camera = new THREE.PerspectiveCamera(45, this.canvasWidth / this.canvasHeight, near, far);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tif (this.cameraViewDir == \"top\")\n\t\t\t{\n\t\t\t\tv.set(0, radius * 2, 0);\n\t\t\t\tduration = 0;\n\t\t\t}\n\t\t\telse if (this.cameraViewDir == \"bottom\")\n\t\t\t{\n\t\t\t\tv.set(0, -radius * 2, 0);\n\t\t\t\tduration = 0;\n\t\t\t}\n\t\t\telse if (this.cameraViewDir == \"front\")\n\t\t\t\tv.set(0, 0, radius * 2);\n\t\t\telse if (this.cameraViewDir == \"back\")\n\t\t\t\tv.set(0, 0, -radius * 2);\n\t\t\telse if (this.cameraViewDir == \"left\")\n\t\t\t\tv.set(-radius * 2, 0, 0);\n\t\t\telse if (this.cameraViewDir == \"right\")\n\t\t\t\tv.set(radius * 2, 0, 0);\n\t\t\tv.add(c);\n\n\t\t\tlet sideDist = radius / 2.5;\n\t\t\tlet aspect = this.canvasWidth / this.canvasHeight;\n\t\t\tthis.camera = new THREE.OrthographicCamera(-sideDist * aspect, sideDist * aspect, sideDist, -sideDist, near, far); // left, right, top, bottom, near, far\n\t\t}\n\n\t\tthis.camera.near = lm.Default(near, radius * 0.5);\n\t\tthis.camera.far = lm.Default(far, radius * 4);\n\t\tthis.camera.position.set(v.x, v.y, v.z);\n\t\tthis.camera.up = new THREE.Vector3(0, 1, 0);\n\t\tthis.camera.lookAt(c);\n\t\tthis.camera.updateProjectionMatrix();\n\t\tif (this.camControls)\n\t\t{\n\t\t\tthis.camControls.object = this.camera;\n\t\t\tthis.camControls.target = c;\n\t\t\tthis.camControls.update();\n\t\t}\n\n\t\tif (duration > 0)\n\t\t{\n\t\t\tlet newPosition = this.camera.position.clone();\n\t\t\tlet newTarget = this.camControls.target.clone();\n\t\t\tthis.camera.position.copy(oldPosition);\n\t\t\tthis.camera.lookAt(oldTarget);\n\t\t\tthis.camera.updateProjectionMatrix();\n\t\t\tthis.camControls.target = oldTarget;\n\t\t\tthis.camControls.update();\n\t\t\tthis.cameraAnimating = true;\n\t\t\tlet animator = new lm.Animation(duration, 0, \"elastic\");\n\t\t\tanimator.Run(function(percent, done)\n\t\t\t{\n\t\t\t\tthis.camera.position.x = lm.Lerp(percent, oldPosition.x, newPosition.x);\n\t\t\t\tthis.camera.position.y = lm.Lerp(percent, oldPosition.y, newPosition.y);\n\t\t\t\tthis.camera.position.z = lm.Lerp(percent, oldPosition.z, newPosition.z);\n\t\t\t\tlet target = oldTarget.lerp(newTarget, percent);\n\t\t\t\tthis.camera.lookAt(target);\n\t\t\t\tthis.camera.updateProjectionMatrix();\n\t\t\t\tthis.camControls.target = target;\n\t\t\t\tthis.camControls.update();\n\t\t\t\tthis.QueueRender();\n\t\t\t\tif (done)\n\t\t\t\t{\n\t\t\t\t\tthis.cameraAnimating = false;\n\t\t\t\t}\n\t\t\t}.bind(this));\n\t\t}\n\t}\n\n\tIsAutosnapAxisAligned(angleThreshold)\n\t{\n\t\tlet v = new lm.Vector3(this.camera.position.x, this.camera.position.y, this.camera.position.z);\n\t\tlet d = new THREE.Vector3();\n\t\tthis.camera.getWorldDirection(d);\n\t\td = new lm.Vector3(d.x, d.y, d.z);\n\t\tangleThreshold = lm.Default(angleThreshold, lm.Rad(20));\n\t\tlet dotTest = Math.cos(angleThreshold);\n\n\t\tlet cameraViewDir = \"free\";\n\t\tlet viewDir = new lm.Vector3(d.x, d.y, d.z);\n\n\t\tif (d.Dot(new lm.Vector3(0, 0, -1)) > dotTest)\n\t\t{ // front\n\t\t\tcameraViewDir = \"front\";\n\t\t\tviewDir.Set(0, 0, -1);\n\t\t}\n\t\telse if (d.Dot(new lm.Vector3(0, 0, 1)) > dotTest)\n\t\t{ // back\n\t\t\tcameraViewDir = \"back\";\n\t\t\tviewDir.Set(0, 0, 1);\n\t\t}\n\t\telse if (d.Dot(new lm.Vector3(0, -1, 0)) > dotTest)\n\t\t{ // top\n\t\t\tcameraViewDir = \"top\";\n\t\t\tviewDir.Set(0, -1, 0);\n\t\t}\n\t\telse if (d.Dot(new lm.Vector3(0, 1, 0)) > dotTest)\n\t\t{ // bottom\n\t\t\tcameraViewDir = \"bottom\";\n\t\t\tviewDir.Set(0, 1, 0);\n\t\t}\n\t\telse if (d.Dot(new lm.Vector3(1, 0, 0)) > dotTest)\n\t\t{ // left\n\t\t\tcameraViewDir = \"left\";\n\t\t\tviewDir.Set(1, 0, 0);\n\t\t}\n\t\telse if (d.Dot(new lm.Vector3(-1, 0, 0)) > dotTest)\n\t\t{ // right\n\t\t\tcameraViewDir = \"right\";\n\t\t\tviewDir.Set(-1, 0, 0);\n\t\t}\n\t\tif (cameraViewDir != \"free\")\n\t\t\treturn true;\n\t\treturn false;\n\t}\n\n\tAutoSnapCamera(bounds, near, far, angleThreshold)\n\t{\n\t\tthis.cameraViewDir = lm.Default(this.cameraViewDir, \"free\");\n\n\t\tlet v = new lm.Vector3(this.camera.position.x, this.camera.position.y, this.camera.position.z);\n\t\tlet d = new THREE.Vector3();\n\t\tthis.camera.getWorldDirection(d);\n\t\td = new lm.Vector3(d.x, d.y, d.z);\n\t\tangleThreshold = lm.Default(angleThreshold, lm.Rad(20));\n\t\tlet dotTest = 100.0;\n\t\tif (angleThreshold > 0)\n\t\t\tdotTest = Math.cos(angleThreshold);\n\n\t\tlet cameraViewDir = \"free\";\n\t\tlet viewDir = new lm.Vector3(d.x, d.y, d.z);\n\n\t\tif (d.Dot(new lm.Vector3(0, 0, -1)) > dotTest)\n\t\t{ // front\n\t\t\tcameraViewDir = \"front\";\n\t\t\tviewDir.Set(0, 0, -1);\n\t\t}\n\t\telse if (d.Dot(new lm.Vector3(0, 0, 1)) > dotTest)\n\t\t{ // back\n\t\t\tcameraViewDir = \"back\";\n\t\t\tviewDir.Set(0, 0, 1);\n\t\t}\n\t\telse if (d.Dot(new lm.Vector3(0, -1, 0)) > dotTest)\n\t\t{ // top\n\t\t\tcameraViewDir = \"top\";\n\t\t\tviewDir.Set(0, -1, 0);\n\t\t}\n\t\telse if (d.Dot(new lm.Vector3(0, 1, 0)) > dotTest)\n\t\t{ // bottom\n\t\t\tcameraViewDir = \"bottom\";\n\t\t\tviewDir.Set(0, 1, 0);\n\t\t}\n\t\telse if (d.Dot(new lm.Vector3(1, 0, 0)) > dotTest)\n\t\t{ // left\n\t\t\tcameraViewDir = \"left\";\n\t\t\tviewDir.Set(1, 0, 0);\n\t\t}\n\t\telse if (d.Dot(new lm.Vector3(-1, 0, 0)) > dotTest)\n\t\t{ // right\n\t\t\tcameraViewDir = \"right\";\n\t\t\tviewDir.Set(-1, 0, 0);\n\t\t}\n\n\t\t// if (cameraViewDir == this.cameraViewDir)\n\t\t// \treturn; // we're already looking in this direction\n\n\t\tthis.cameraViewDir = cameraViewDir;\n\t\t// if (this.cameraViewDir == \"free\")\n\t\t// \treturn; // free view direction - no snapping in this case\n\n\t\tlet bbox = this.GetSceneBounds();\n\t\tif (bounds)\n\t\t{\n\t\t\tbbox.set(new THREE.Vector3(bounds.min.x, bounds.min.y, bounds.min.z), new THREE.Vector3(bounds.max.x, bounds.max.y, bounds.max.z));\n\t\t}\n\t\tlet c = new THREE.Vector3();\n\t\tbbox.getCenter(c);\n\t\tlet vc = new lm.Vector3(c.x, c.y, c.z);\n\t\tvc = vc.Minus(v);\n\t\t//vc = v.Plus(viewDir.Times(vc.Mag()));\n\t\tviewDir.TimesEq(viewDir.Dot(vc));\n\t\tvc = v.Plus(viewDir);\n\n\t\tc.x = vc.x;\n\t\tc.y = vc.y;\n\t\tc.z = vc.z;\n\t\tlet camPos = this.camera.position;\n\n\t\tif (this.cameraViewDir == \"free\")\n\t\t{\n\t\t\tif (this.camera.isOrthographicCamera)\n\t\t\t\tthis.camera = new THREE.PerspectiveCamera(45, this.canvasWidth / this.canvasHeight, near, far);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tlet sideDist = viewDir.Mag() / 2.5; // the division factor is kind of arbitrary, but the idea is to roughly line up the visual size of the perspective and ortho cameras\n\t\t\tlet aspect = this.canvasWidth / this.canvasHeight;\n\t\t\tif (!this.camera.isOrthographicCamera)\n\t\t\t\tthis.camera = new THREE.OrthographicCamera(-sideDist * aspect, sideDist * aspect, sideDist, -sideDist, near, far); // left, right, top, bottom, near, far\n\t\t\tif (this.camControls)\n\t\t\t{\n\t\t\t\tc.copy(this.camControls.target);\n\t\t\t\tcamPos.x = c.x - viewDir.x;\n\t\t\t\tcamPos.y = c.y - viewDir.y;\n\t\t\t\tcamPos.z = c.z - viewDir.z;\n\t\t\t}\n\t\t}\n\t\tthis.camera.position.copy(camPos);\n\t\tthis.camera.up = new THREE.Vector3(0, 1, 0);\n\t\tthis.camera.lookAt(c);\n\t\tthis.camera.updateProjectionMatrix();\n\t\tif (this.camControls)\n\t\t{\n\t\t\tthis.camControls.object = this.camera;\n\t\t\tthis.camControls.target = c;\n\t\t\tthis.camControls.update();\n\t\t}\n\t}\n\n\tCreateAxes()\n\t{\n\t\tif (this.autoAxesObject)\n\t\t{\n\t\t\tthis.extrasGroup.remove(this.autoAxesObject);\n\t\t\tthis.autoAxesObject = null;\n\t\t}\n\n\t\tlet bbox = this.GetSceneBounds();\n\t\tlet s = new THREE.Vector3();\n\t\tbbox.getSize(s);\n\n\t\tthis.autoAxesObject = new THREE.AxesHelper(lm.Max(s.x, lm.Max(s.y, s.z)));\n\t\tthis.extrasGroup.add(this.autoAxesObject);\n\t}\n\n\tRemoveAxes()\n\t{\n\t\tif (this.autoAxesObject)\n\t\t{\n\t\t\tthis.extrasGroup.remove(this.autoAxesObject);\n\t\t\tthis.autoAxesObject = null;\n\t\t}\n\t}\n\n\tCreateAutoGround(params)\n\t{\n\t\tif (this.autoGroundObject)\n\t\t{\n\t\t\tthis.extrasGroup.remove(this.autoGroundObject);\n\t\t\tthis.autoGroundObject = null;\n\t\t}\n\n\t\tlet bbox = params.bounds;\n\t\tif (!bbox)\n\t\t\tbbox = this.GetSceneBounds();\n\n\t\tlet groundScale = 1.0;\n\t\tif (params && params.scale)\n\t\t\tgroundScale = params.scale;\n\t\tlet xSize = lm.Max(bbox.XLength(), bbox.YLength() * 1.5);\n\t\tlet zSize = lm.Max(xSize, bbox.ZLength());\n\t\tlet planeGeometry = new THREE.PlaneGeometry(xSize * groundScale, zSize * groundScale, 1, 1);\n\t\tlet planeMaterial;\n\t\tlet groundColor = 0xcccccc;\n\t\tif (params && params.color)\n\t\t\tgroundColor = params.color;\n\t\tplaneMaterial = new THREE.MeshLambertMaterial({color: groundColor});\n\t\tthis.autoGroundObject = new THREE.Mesh(planeGeometry, planeMaterial);\n\t\tthis.autoGroundObject.castShadow = false;\n\t\tthis.autoGroundObject.receiveShadow = true;\n\t\tthis.autoGroundObject.rotation.x = -0.5 * Math.PI;\n\t\tlet groundOffset = 0;\n\t\tif (params && params.yOffset)\n\t\t\tgroundOffset = (bbox.max.y - bbox.min.y) * params.yOffset;\n\t\tthis.autoGroundObject.position.set((bbox.min.x + bbox.max.x) / 2, bbox.min.y + groundOffset, (bbox.min.z + bbox.max.z) / 2);\n\t\tthis.extrasGroup.add(this.autoGroundObject);\n\t}\n\n\tRemoveAutoGround()\n\t{\n\t\tif (this.autoGroundObject)\n\t\t{\n\t\t\tthis.extrasGroup.remove(this.autoGroundObject);\n\t\t\tthis.autoGroundObject = null;\n\t\t}\n\t}\n\n\tEnableExtras(enable)\n\t{\n\t\tif (!enable)\n\t\t\tthis.scene.remove(this.extrasGroup);\n\t\telse\n\t\t\tthis.scene.add(this.extrasGroup);\n\t}\n\n\tAddThreePointLighting(showHelpers, dramaticScaledown, intensityScale)\n\t{\n\t\tdramaticScaledown = lm.Default(dramaticScaledown, 1.0);\n\t\tintensityScale = lm.Default(intensityScale, 1.0);\n\n\t\twhile (this.lightGroup.children.length > 0)\n\t\t\tthis.lightGroup.remove(this.lightGroup.children[0]);\n\n\t\tlet bbox = this.GetSceneBounds();\n\t\tlet c = new THREE.Vector3();\n\t\tbbox.getCenter(c);\n\t\tlet s = new THREE.Vector3();\n\t\tbbox.getSize(s);\n\n\t\tlet radius = lm.Max(s.x, lm.Max(s.y, s.z));\n\n\t\tlet v = new THREE.Vector3(0, 0, radius * 2);\n\t\tv.applyEuler(new THREE.Euler(lm.Rad(-45), lm.Rad(-20), 0.0, 'YXZ'));\n\t\tv = v.add(c);\n\n\t\tlet shadowBoundsVal = radius * 0.75;\n\n\t\tthis.keyLight = new THREE.DirectionalLight(0xffffff, 0.7 * intensityScale);\n\t\tthis.keyLight.position.set(v.x, v.y, v.z);\n\t\tthis.keyLight.castShadow = true;\n\t\t//this.keyLight.shadow.bias = -0.01;\n\t\tthis.keyLight.shadow.mapSize.width = 1024;\n\t\tthis.keyLight.shadow.mapSize.height = 1024;\n\t\tthis.keyLight.shadow.camera.near = radius * 0.5;\n\t\tthis.keyLight.shadow.camera.far = radius * 4;\n\t\tthis.keyLight.shadow.camera.right = shadowBoundsVal;\n\t\tthis.keyLight.shadow.camera.left = -shadowBoundsVal;\n\t\tthis.keyLight.shadow.camera.top = shadowBoundsVal;\n\t\tthis.keyLight.shadow.camera.bottom = -shadowBoundsVal;\n\t\tthis.lightGroup.add(this.keyLight);\n\n\t\tv.set(0, 0, radius * 2);\n\t\tv.applyEuler(new THREE.Euler(lm.Rad(20), lm.Rad(60), 0.0, 'YXZ'));\n\t\tv = v.add(c);\n\n\t\tthis.fillLight = new THREE.DirectionalLight(0xffffff, 0.5 * dramaticScaledown * intensityScale);\n\t\tthis.fillLight.position.set(v.x, v.y, v.z);\n\t\t//this.fillLight.castShadow = true;\n\t\tthis.fillLight.shadow.mapSize.width = 1024;\n\t\tthis.fillLight.shadow.mapSize.height = 1024;\n\t\tthis.fillLight.shadow.camera.near = radius * 0.5;\n\t\tthis.fillLight.shadow.camera.far = radius * 4;\n\t\tthis.fillLight.shadow.camera.right = shadowBoundsVal;\n\t\tthis.fillLight.shadow.camera.left = -shadowBoundsVal;\n\t\tthis.fillLight.shadow.camera.top = shadowBoundsVal;\n\t\tthis.fillLight.shadow.camera.bottom = -shadowBoundsVal;\n\t\tthis.lightGroup.add(this.fillLight);\n\n\t\tv.set(0, 0, radius * 2);\n\t\tv.applyEuler(new THREE.Euler(lm.Rad(5), lm.Rad(-150), 0.0, 'YXZ'));\n\t\tv = v.add(c);\n\n\t\tthis.backLight = new THREE.DirectionalLight(0xffeeff, 0.75 * dramaticScaledown * intensityScale);\n\t\tthis.backLight.position.set(v.x, v.y, v.z);\n\t\t//this.backLight.castShadow = true;\n\t\tthis.backLight.shadow.mapSize.width = 1024;\n\t\tthis.backLight.shadow.mapSize.height = 1024;\n\t\tthis.backLight.shadow.camera.near = radius * 0.5;\n\t\tthis.backLight.shadow.camera.far = radius * 4;\n\t\tthis.backLight.shadow.camera.right = shadowBoundsVal;\n\t\tthis.backLight.shadow.camera.left = -shadowBoundsVal;\n\t\tthis.backLight.shadow.camera.top = shadowBoundsVal;\n\t\tthis.backLight.shadow.camera.bottom = -shadowBoundsVal;\n\t\tthis.lightGroup.add(this.backLight);\n\n//\t\tthis.ambientLight = new THREE.AmbientLight(0xffffff, 0.2); // soft white light\n//\t\tthis.lightGroup.add(this.ambientLight);\n\n\t\tif (showHelpers)\n\t\t{\n\t\t\tlet keyHelper = new THREE.DirectionalLightHelper(this.keyLight, radius / 10, 0xff0000);\n\t\t\tthis.lightGroup.add(keyHelper);\n\n\t\t\tlet fillHelper = new THREE.DirectionalLightHelper(this.fillLight, radius / 10, 0x00ff00);\n\t\t\tthis.lightGroup.add(fillHelper);\n\n\t\t\tlet backHelper = new THREE.DirectionalLightHelper(this.backLight, radius / 10, 0x0000ff);\n\t\t\tthis.lightGroup.add(backHelper);\n\t\t}\n\t}\n\n\tCreateOverlay()\n\t{\n\t\tif (this.overlayScene)\n\t\t\treturn;\n\n\t\tlet width = this.canvasWidth;\n\t\tlet height = this.canvasHeight;\n\t\t// this.overlayCamera = new THREE.OrthographicCamera(-width / 2, width / 2, height / 2, -height / 2, -1000, 1000);\n\t\tthis.overlayCamera = new THREE.OrthographicCamera(0, width, 0, height, -1000, 1000);\n\t\tthis.overlayCamera.position.x = 0;\n\t\tthis.overlayCamera.position.y = 0;\n\t\tthis.overlayCamera.position.z = 0;\n\n\t\tthis.overlayScene = new THREE.Scene();\n\n\t\t// let geometry = new THREE.SphereGeometry(8, 10, 10);\n\t\t// geometry.translate(width, height, 0);\n\t\t// let material = new THREE.MeshBasicMaterial({ color: 0xff0000, wireframe_: true });\n\t\t// let sphere = new THREE.Mesh(geometry, material);\n\t\t// this.overlayScene.add(sphere);\n\t}\n\n\tCreateOutlineFromBBox(bbox, material)\n\t{ // returns an object made up of line segments, outlining the lm.BBox\n\t\tlet g = new THREE.Geometry();\n\n\t\t// top\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.max.y, bbox.min.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.max.y, bbox.min.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.max.y, bbox.min.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.max.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.max.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.max.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.max.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.max.y, bbox.min.z));\n\n\t\t// bottom\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.min.y, bbox.min.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.min.y, bbox.min.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.min.y, bbox.min.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.min.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.min.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.min.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.min.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.min.y, bbox.min.z));\n\n\t\t// sides\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.min.y, bbox.min.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.max.y, bbox.min.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.min.y, bbox.min.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.max.y, bbox.min.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.min.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.max.x, bbox.max.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.min.y, bbox.max.z));\n\t\tg.vertices.push(new THREE.Vector3(bbox.min.x, bbox.max.y, bbox.max.z));\n\n \t\treturn new THREE.LineSegments(g, material);\n\t}\n\n\tAddBodyToScene(body, materialSet)\n\t{ // Add a JSModeler body to the scene\n\t\tif (!this.jsmMeshes)\n\t\t\tthis.jsmMeshes = [];\n\t\tlet meshes = JSM.ConvertBodyToThreeMeshes(body, materialSet);\n\t\tfor (let i = 0; i < meshes.length; i++)\n\t\t{\n\t\t\tthis.jsmMeshes.push(meshes[i]);\n\t\t\tthis.userGroup.add(meshes[i]);\n\t\t}\n\t}\n\n\tExportOBJ(fileName)\n\t{\n\t\tlet exporter = new THREE.OBJExporter();\n\t\tlet result = exporter.parse(this.scene);\n\n\t\tlet b = new Blob([result]);\n\t\tsaveAs(b, fileName + \".obj\");\n\t}\n\n\tExportGLB(fileName)\n\t{\n\t\tlet exporter = new THREE.GLTFExporter();\n\t\tlet result = exporter.parse(this.scene, function(result)\n\t\t{\n\t\t\tlet b = new Blob([result]);\n\t\t\tsaveAs(b, fileName + \".glb\");\n\t\t},\n\t\t{\n\t\t\tonlyVisible: true,\n\t\t\tbinary: true,\n\t\t\tembedImages: true,\n\t\t});\n\t}\n\n\tExportPNG(fileName)\n\t{\n\t\tthis.renderer.domElement.toBlob(function(blob)\n\t\t{\n\t\t\tsaveAs(blob, fileName + \".png\");\n\t\t}, \"image/png\");\n\t}\n\n\t// The following need to be implemented in your subclass if you want mouse events:\n\tOnMouseDown(event, where) {}\n\tOnMouseMove(event, where, isMouseDown) {}\n\tOnMouseUp(event, where) {}\n\tOnClick(event, where) {}\n\tOnDoubleClick(event, where) {}\n}\n\nlm.ThreeApp = lm_ThreeApp;\n\nlm.TaperY = function(geometry, xScale, zScale, bbox)\n{ // bbox is optional. If not supplied, then use the geometry's bounding box.\n\tif (!bbox)\n\t{\n\t\tgeometry.computeBoundingBox();\n\t\tbbox = geometry.boundingBox;\n\t}\n\tlet boxLength = bbox.max.y - bbox.min.y;\n\tfor (let i = 0, il = geometry.vertices.length; i < il; i++)\n\t{\n\t\tlet v = geometry.vertices[i];\n\t\tlet f = (v.y - bbox.min.y) / boxLength;\n\t\tv.x *= lm.Lerp(f, 1.0, xScale);\n\t\tv.z *= lm.Lerp(f, 1.0, zScale);\n\t\tgeometry.vertices[i].x = v.x;\n\t\tgeometry.vertices[i].z = v.z;\n\t}\n\tgeometry.computeBoundingBox();\n}\n\nlm.GenerateUVMap = function(geometry)\n{\n\tgeometry.faceVertexUvs[0] = [];\n\n\tgeometry.computeBoundingBox();\n\n\tlet base = geometry.boundingBox.min.clone();\n\tlet boxScaling = new THREE.Vector3();\n\tgeometry.boundingBox.getSize(boxScaling);\n\tboxScaling.x = 1.0 / boxScaling.x;\n\tboxScaling.y = 1.0 / boxScaling.y;\n\tboxScaling.z = 1.0 / boxScaling.z;\n\n\tgeometry.faces.forEach(function(face)\n\t{\n\t\tlet components = ['x', 'y', 'z'];\n\n\t\tlet v1 = geometry.vertices[face.a].clone();\n\t\tlet v2 = geometry.vertices[face.b].clone();\n\t\tlet v3 = geometry.vertices[face.c].clone();\n\n\t\tv1.sub(base);\n\t\tv2.sub(base);\n\t\tv3.sub(base);\n\n\t\tv1.multiply(boxScaling);\n\t\tv2.multiply(boxScaling);\n\t\tv3.multiply(boxScaling);\n\n\t\t// Do a little blending to break up UVs on the sides of constant surfaces.\n\t\tv1.x = lm.Lerp(0.2, v1.x, v1.z);\n\t\tv2.x = lm.Lerp(0.2, v2.x, v2.z);\n\t\tv3.x = lm.Lerp(0.2, v3.x, v3.z);\n\n\t\tv1.y = lm.Lerp(0.2, v1.y, v1.z);\n\t\tv2.y = lm.Lerp(0.2, v2.y, v2.z);\n\t\tv3.y = lm.Lerp(0.2, v3.y, v3.z);\n\n\t\tgeometry.faceVertexUvs[0].push([\n\t\t\tnew THREE.Vector2(v1[components[0]], v1[components[1]]),\n\t\t\tnew THREE.Vector2(v2[components[0]], v2[components[1]]),\n\t\t\tnew THREE.Vector2(v3[components[0]], v3[components[1]])\n\t\t]);\n\t});\n\n\tgeometry.elementsNeedUpdate = true;\n\tgeometry.uvsNeedUpdate = true;\n}\n\nlm.GenerateUVMap_old = function(geometry)\n{\n\tgeometry.faceVertexUvs[0] = [];\n\n\tgeometry.computeBoundingBox();\n\tlet center = new THREE.Vector3();\n\tgeometry.boundingBox.getCenter(center);\n\tlet boxScaling = new THREE.Vector3();\n\tgeometry.boundingBox.getSize(boxScaling);\n\tboxScaling.x = 1.0 / (boxScaling.x / 2);\n\tboxScaling.y = 1.0 / (boxScaling.y / 2);\n\tboxScaling.z = 1.0 / (boxScaling.z / 2);\n\n\tgeometry.faces.forEach(function(face)\n\t{\n\t\t// let components = ['x', 'y', 'z'].sort(function(a, b) {\n\t\t// \treturn Math.abs(face.normal[a]) > Math.abs(face.normal[b]);\n\t\t// }); // This probably introduces discontinuities between neighboring faces.\n\t\tlet components = ['x', 'y', 'z'];\n\n\t\tlet v1 = geometry.vertices[face.a].clone();\n\t\tlet v2 = geometry.vertices[face.b].clone();\n\t\tlet v3 = geometry.vertices[face.c].clone();\n\n\t\tv1.sub(center);\n\t\tv2.sub(center);\n\t\tv3.sub(center);\n\t\t// v1.normalize();\n\t\t// v2.normalize();\n\t\t// v3.normalize();\n\n\t\tv1.multiply(boxScaling);\n\t\tv2.multiply(boxScaling);\n\t\tv3.multiply(boxScaling);\n\n\t\tv1.x = (v1.x + 1.0) / 2.0;\n\t\tv1.y = (v1.y + 1.0) / 2.0;\n\t\tv1.z = (v1.z + 1.0) / 2.0;\n\n\t\tv2.x = (v2.x + 1.0) / 2.0;\n\t\tv2.y = (v2.y + 1.0) / 2.0;\n\t\tv2.z = (v2.z + 1.0) / 2.0;\n\n\t\tv3.x = (v3.x + 1.0) / 2.0;\n\t\tv3.y = (v3.y + 1.0) / 2.0;\n\t\tv3.z = (v3.z + 1.0) / 2.0;\n\n\t\tgeometry.faceVertexUvs[0].push([\n\t\t\tnew THREE.Vector2(v1[components[0]], v1[components[1]]),\n\t\t\tnew THREE.Vector2(v2[components[0]], v2[components[1]]),\n\t\t\tnew THREE.Vector2(v3[components[0]], v3[components[1]])\n\t\t]);\n\t});\n\n\tgeometry.elementsNeedUpdate = true;\n\tgeometry.uvsNeedUpdate = true;\n}\n\nlm.GenerateUVMap_basedOnNormals = function(geometry)\n{\n\tgeometry.faceVertexUvs[0] = [];\n\n\tgeometry.faces.forEach(function(face) {\n\n\tlet n1 = face.normal[face.a];\n\tlet n2 = face.normal[face.b];\n\tlet n3 = face.normal[face.c];\n\n\tgeometry.faceVertexUvs[0].push([\n\t\tnew THREE.Vector2(Math.atan2(n1.z, n1.x) / Math.PI * 0.5 - 0.5, 0.5 - Math.asin(n1.y) / Math.PI),\n\t\tnew THREE.Vector2(Math.atan2(n2.z, n2.x) / Math.PI * 0.5 - 0.5, 0.5 - Math.asin(n2.y) / Math.PI),\n\t\tnew THREE.Vector2(Math.atan2(n3.z, n3.x) / Math.PI * 0.5 - 0.5, 0.5 - Math.asin(n3.y) / Math.PI)\n\t]);\n\n\t});\n\n\tgeometry.uvsNeedUpdate = true;\n}\n"],"names":["lm_ThreeApp","constructor","this","BACKGROUND_COLOR","cameraControlMode","SSAO","enabled","onlyAO","radius","minDistance","maxDistance","Bokeh","focusDistance","FilmGrain","noiseIntensity","scanlineIntensity","scanlineCount","grayscale","outlineOptions","objects","edgeStrength","edgeGlow","edgeThickness","visibleEdgeColor","THREE","Color","hiddenEdgeColor","toonEffect","rendererOptions","preserveDrawingBuffer","antialias","alpha","continuousRendering","showStats","useEffectComposer","clickTolerance","mainTimer","lm","Stopwatch","Start","SetupThreeJS","divID","DEBUG","stats","Stats","setMode","domElement","style","position","left","top","document","body","appendChild","canvasDiv","canvasWidth","window","innerWidth","canvasHeight","innerHeight","getElementById","clientWidth","clientHeight","scene","Scene","add","lightGroup","Group","extrasGroup","userGroup","camera","PerspectiveCamera","set","lookAt","camControls","OrbitControls","screenSpacePanning","rotateSpeed","zoomSpeed","panSpeed","keyPanSpeed","TrackballControls","noZoom","noPan","staticMoving","dynamicDampingFactor","keys","addEventListener","QueueRender","bind","renderer","WebGLRenderer","setClearColor","setSize","shadowMap","type","PCFSoftShadowMap","autoResize","THREEx","WindowResize","ConnectMouseEvents","handleClick","handleDoubleClick","Render","event","scale","preventDefault","passive","lastTouchEnd","now","Date","getTime","UpdateScene","isRendering","queueRender","_AnimationCallback","forceNow","isOrthographicCamera","f","right","aspect","updateProjectionMatrix","requestAnimationFrame","begin","update","f1","toonEffectObject","OutlineEffect","defaultThickness","defaultColor","defaultAlpha","defaultKeepAlive","length","effectComposer","renderPass","ssaoPass","bokehPass","filmGrainPass","outlinePass","EffectComposer","RenderPass","clearColor","clearAlpha","SSAOPass","kernelRadius","output","OUTPUT","bokehParams","focus","aperture","maxblur","sceneCenter","Vector3","GetSceneBounds","getCenter","sub","RealEqual","uniforms","value","BokehPass","needsSwap","FilmPass","OutlinePass","Vector2","passes","addPass","selectedObjects","children","reportedEmptyUserGroup","Log","render","overlayScene","autoClear","clearDepth","overlayCamera","end","bbox","Box3","setFromObject","isEmpty","ClearUserGroup","remove","AutoSetCamera","bounds","near","far","boundsScale","duration","Default","cameraViewDir","min","x","y","z","max","c","s","getSize","Max","v","applyEuler","Euler","Rad","oldPosition","clone","oldTarget","target","sideDist","OrthographicCamera","up","object","newPosition","newTarget","copy","cameraAnimating","Animation","Run","percent","done","Lerp","lerp","IsAutosnapAxisAligned","angleThreshold","d","getWorldDirection","dotTest","Math","cos","viewDir","Dot","Set","AutoSnapCamera","vc","Minus","TimesEq","Plus","camPos","Mag","CreateAxes","autoAxesObject","AxesHelper","RemoveAxes","CreateAutoGround","params","autoGroundObject","groundScale","planeMaterial","xSize","XLength","YLength","zSize","ZLength","planeGeometry","PlaneGeometry","groundColor","color","MeshLambertMaterial","Mesh","castShadow","receiveShadow","rotation","PI","groundOffset","yOffset","RemoveAutoGround","EnableExtras","enable","AddThreePointLighting","showHelpers","dramaticScaledown","intensityScale","shadowBoundsVal","keyLight","DirectionalLight","shadow","mapSize","width","height","bottom","fillLight","backLight","keyHelper","DirectionalLightHelper","fillHelper","backHelper","CreateOverlay","CreateOutlineFromBBox","material","g","Geometry","vertices","push","LineSegments","AddBodyToScene","materialSet","jsmMeshes","meshes","JSM","ConvertBodyToThreeMeshes","i","ExportOBJ","fileName","result","OBJExporter","parse","b","Blob","saveAs","ExportGLB","GLTFExporter","onlyVisible","binary","embedImages","ExportPNG","toBlob","blob","OnMouseDown","where","OnMouseMove","isMouseDown","OnMouseUp","OnClick","OnDoubleClick","ThreeApp","TaperY","geometry","xScale","zScale","computeBoundingBox","boundingBox","boxLength","il","GenerateUVMap","faceVertexUvs","base","boxScaling","faces","forEach","face","components","v1","a","v2","v3","multiply","elementsNeedUpdate","uvsNeedUpdate","GenerateUVMap_old","center","GenerateUVMap_basedOnNormals","n1","normal","n2","n3","atan2","asin"],"version":3,"file":"index.d08e4d1c.js.map"}